/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-01-08 02:26:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Ztree122_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\t\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/zTree_v3/css/zTreeStyle/zTreeStyle.css\" type=\"text/css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/zTree_v3/js/jquery-1.4.4.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/zTree_v3/js/jquery.ztree.core.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/zTree_v3/js/jquery.ztree.excheck.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/zTree_v3/js/jquery.ztree.exedit.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\tvar setting = {\r\n");
      out.write("\t\t\tview: {\r\n");
      out.write("\t\t\t\taddHoverDom: addHoverDom,//用于当鼠标移动到节点上时，显示用户自定义控件，显示隐藏状态同 zTree 内部的编辑、删除按钮 请务必与 setting.view.removeHoverDom 同时使用\r\n");
      out.write("\t\t\t\tremoveHoverDom: removeHoverDom,//用于当鼠标移出节点时，隐藏用户自定义控件，显示隐藏状态同 zTree 内部的编辑、删除按钮\r\n");
      out.write("\t\t\t\tdblClickExpand : false,//双击节点时，是否自动展开父节点的标识 默认值: true\r\n");
      out.write("\t\t\t\tselectedMulti: false//设置是否允许同时选中多个节点。默认值: true\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tedit: {\r\n");
      out.write("\t\t\t\tenable: true,//设置 zTree 是否处于编辑状态\r\n");
      out.write("\t\t\t\teditNameSelectAll: true,//节点编辑名称 input 初次显示时,设置 txt 内容是否为全选状态。 [setting.edit.enable = true 时生效]\r\n");
      out.write("\t\t\t\tremoveTitle:\"删除\",//删除按钮的辅助信息\r\n");
      out.write("\t\t\t\trenameTitle:\"重命名\"//重命名按钮的辅助信息\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdata: {\r\n");
      out.write("\t\t\t\tsimpleData: {\r\n");
      out.write("\t\t\t\t\tenable: true,\r\n");
      out.write("\t\t\t\t\tidKey : \"id\",\r\n");
      out.write("\t\t\t\t\tpIdKey : \"pid\",\r\n");
      out.write("\t\t\t\t\trootPId : 0\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tkey:{\r\n");
      out.write("\t\t\t\t\tname : \"name\"\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcallback: {\t\t\t\t\r\n");
      out.write("\t\t\t\tbeforeEditName: beforeEditName,\r\n");
      out.write("\t\t\t\tbeforeRemove: beforeRemove,\r\n");
      out.write("\t\t\t\tbeforeRename: beforeRename,\r\n");
      out.write("\t\t\t\tonClick : zTreeOnClick\r\n");
      out.write("\t\t\t}, \r\n");
      out.write("\t\t\t async: {\r\n");
      out.write("\t\t\t\tenable: true,\r\n");
      out.write("\t\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/city/findcity\", \r\n");
      out.write("\t\t\t\ttype:\"get\",\r\n");
      out.write("\t\t\t\tautoParam: [\"id\"]\r\n");
      out.write("\t\t\t}, \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$(\"#addG\").bind(\"click\",addRootDep);\r\n");
      out.write("\t})\r\n");
      out.write("\tvar log, className = \"dark\";\r\n");
      out.write("\tvar rootNum=0;\r\n");
      out.write("\t//添加根目录 \r\n");
      out.write("\tfunction addRootDep(treeId, treeNode){\r\n");
      out.write("\t\trootNum++;\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"POST\",  \r\n");
      out.write("\t\t    async : false,  \r\n");
      out.write("\t\t    url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/city/addCity\",  \r\n");
      out.write("\t\t    data :  \r\n");
      out.write("\t\t    {  \r\n");
      out.write("\t\t    \tname : \"china\" + rootNum,\r\n");
      out.write("\t\t    \tpid:0\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    success:function(data){\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \tif(data){\r\n");
      out.write("\t\t    \t\tvar zTree = $.fn.zTree.getZTreeObj(\"treeDemo\");\r\n");
      out.write("\t\t    \t\tvar newNode=[{name:\"china\"+rootNum,pid:0}];\r\n");
      out.write("\t\t    \t\tzTree.addNodes(null,newNode);\r\n");
      out.write("\t\t    \t\twindow.location.reload();\r\n");
      out.write("\t\t    \t}else{\r\n");
      out.write("\t\t    \t\talert(\"无法添加\");\r\n");
      out.write("\t\t    \t\twindow.location.reload();\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t}); \t\t\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t// 添加子部门操作\r\n");
      out.write("\tvar newCount = 0;\r\n");
      out.write("\tfunction addHoverDom(treeId, treeNode) {\r\n");
      out.write("\t\tvar sObj = $(\"#\" + treeNode.tId + \"_span\");\r\n");
      out.write("\t\tif (treeNode.editNameFlag || $(\"#addBtn_\"+treeNode.tId).length>0) return;\r\n");
      out.write("\t\tvar addStr = \"<span class='button add' id='addBtn_\" + treeNode.tId\r\n");
      out.write("\t\t\t+ \"' title='添加' onfocus='this.blur();'></span>\";\r\n");
      out.write("\t\tsObj.after(addStr);\r\n");
      out.write("\t\tvar btn = $(\"#addBtn_\"+treeNode.tId);\r\n");
      out.write("\t\t//var isAdded=false;\r\n");
      out.write("\t\tif (btn) btn.bind(\"click\", function(){\r\n");
      out.write("\t\t\tnewCount++;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",  \r\n");
      out.write("\t\t\t    async : false,  \r\n");
      out.write("\t\t\t    url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/city/addCity\",  \r\n");
      out.write("\t\t\t    data :  \r\n");
      out.write("\t\t\t    {  \r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("\t\t\t    \tname : \"pro\" + newCount,\r\n");
      out.write("\t\t\t    \tpid:treeNode.id\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    success:function(data){\r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("\t\t\t    \tif(data){\r\n");
      out.write("\t\t\t    \t\tvar zTree = $.fn.zTree.getZTreeObj(\"treeDemo\");\r\n");
      out.write("\t\t\t\t\t\tzTree.addNodes(treeNode, {pid:treeNode.id, name:\"pro\" + (newCount)});\r\n");
      out.write("\t\t\t\t\t\talert(\"添加成功\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.reload();\r\n");
      out.write("\t\t\t    \t}else{\r\n");
      out.write("\t\t\t    \t\talert(\"添加失敗，请联系管理员！\");\r\n");
      out.write("\t\t\t    \t\twindow.location.reload();\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t// 删除操作\r\n");
      out.write("\tfunction beforeRemove(treeId, treeNode) {\r\n");
      out.write("\t\tclassName = (className === \"dark\" ? \"\":\"dark\");\r\n");
      out.write("\t\tvar zTree = $.fn.zTree.getZTreeObj(\"treeDemo\");\r\n");
      out.write("\t\tzTree.selectNode(treeNode);\r\n");
      out.write("\t\tvar isDel=confirm(\"确认删除部门 -- \" + treeNode.name + \" 吗？\");\t\t\t\r\n");
      out.write("\t\tif (isDel) {\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",  \r\n");
      out.write("\t\t\t    async : false,  \r\n");
      out.write("\t\t\t    url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/city/delCity\",  \r\n");
      out.write("\t\t\t    data :  \r\n");
      out.write("\t\t\t    {  \r\n");
      out.write("\t\t\t    \tid : treeNode.id  \r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    success:function(data){\r\n");
      out.write("\t\t\t    \tif(data){\r\n");
      out.write("\t\t\t    \t\talert(\"删除成功\");\r\n");
      out.write("\t\t\t    \t\twindow.location.reload();\t\t\t\t\t\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// 在进行重命名之前，进行一下确认\r\n");
      out.write("\tfunction beforeEditName(treeId, treeNode) {\r\n");
      out.write("\t\tclassName = (className === \"dark\" ? \"\":\"dark\");\r\n");
      out.write("\t\tvar zTree = $.fn.zTree.getZTreeObj(\"treeDemo\");\r\n");
      out.write("\t\tzTree.selectNode(treeNode);\r\n");
      out.write("\t\treturn confirm(\"确认要重命名部门 -- \" + treeNode.name + \" 吗？\");\r\n");
      out.write("\t};\r\n");
      out.write("\t// 重命名操作\r\n");
      out.write("\tfunction beforeRename(treeId, treeNode, name, isCancel) {\r\n");
      out.write("\t\tclassName = (className === \"dark\" ? \"\":\"dark\");\r\n");
      out.write("\t\tif (name.length == 0) {\r\n");
      out.write("\t\t\talert(\"节点名称不能为空.\");\r\n");
      out.write("\t\t\tvar zTree = $.fn.zTree.getZTreeObj(\"treeDemo\");\r\n");
      out.write("\t\t\tsetTimeout(function(){zTree.editName(treeNode)}, 10);\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",  \r\n");
      out.write("\t\t\t    async : false,  \r\n");
      out.write("\t\t\t    url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/city/updateCity\",  \r\n");
      out.write("\t\t\t    data :  \r\n");
      out.write("\t\t\t    {  \r\n");
      out.write("\t\t\t    \tid : treeNode.id,\r\n");
      out.write("\t\t\t    \tname : name\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    success:function(data){\r\n");
      out.write("\t\t\t    \tif (data) {\r\n");
      out.write("\t\t\t    \t\talert(\"修改成功\");\r\n");
      out.write("\t\t\t    \t\twindow.location.reload();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t//alert(\"修改失敗\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.reload();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t}); \t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tfunction zTreeOnClick(event, treeId, treeNode) {\r\n");
      out.write("\t    alert(treeNode.id + \", \" + treeNode.name);\r\n");
      out.write("\t};\r\n");
      out.write("\tfunction removeHoverDom(treeId, treeNode) {\r\n");
      out.write("\t\t$(\"#addBtn_\"+treeNode.tId).unbind().remove();\r\n");
      out.write("\t}; \r\n");
      out.write("\t\r\n");
      out.write("\t/* function selectAll(treeId, treeNode){\t\t\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"get\",  \t\t \r\n");
      out.write("\t\t    url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/city/findcity\",\t\t\t   \r\n");
      out.write("\t\t    dataType:\"json\",\r\n");
      out.write("\t\t    success:function(data){\r\n");
      out.write("\t\t    \t$.fn.zTree.init($(\"#treeDemo\"), setting,data);\t\t    \t\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t}); \r\n");
      out.write("\t} */\r\n");
      out.write("\t\t\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$.fn.zTree.init($(\"#treeDemo\"), setting);\t\r\n");
      out.write("\t\t//$(\"#selectAll\").bind(\"click\",selectAll);\r\n");
      out.write("\t})\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"content_wrap\">\r\n");
      out.write("\t<div class=\"zTreeDemoBackground left\">\r\n");
      out.write("\t<!-- <button id=\"selectAll\">点击查询</button> -->\r\n");
      out.write("\t<button id=\"addG\">添加根节点</button>\r\n");
      out.write("\t\t<ul id=\"treeDemo\" class=\"ztree\"></ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
